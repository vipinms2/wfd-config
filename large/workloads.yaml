#@ load("@ytt:data", "data")
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-api-gateway
    apps.tanzu.vmware.com/has-tests: "true"
spec:
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
  source:
    git:
      url: #@ data.values.gitRepository
      ref:
        branch: main
    subPath: hungryman-api-gateway
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-search
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-search
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/has-tests: "true"
spec:
  env:
  - name: spring_profiles_active
    value: postgres
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
      autoscaling.knative.dev/minScale: "1"
  serviceClaims:
  - name: rmq
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ResourceClaim
      name: rmq-where-for-dinner
  - name: db
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ResourceClaim
      name: postgres-where-for-dinner
  source:
    git:
      url: #@ data.values.gitRepository
      ref:
        branch: main
    subPath: hungryman-search
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-search-proc
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-search-proc
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/has-tests: "true"
spec:
  build:
    env:
    - name: BP_MAVEN_BUILD_ARGUMENTS
      value: -P native -Dmaven.test.skip=true --no-transfer-progress package
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
  env:
  - name: spring_profiles_active
    value: crawler,redis
  serviceClaims:
  - name: redis
    ref:
      apiVersion: v1
      kind: Secret
      name: redis-where-for-dinner-redis-secret
  source:
    git:
      url: #@ data.values.gitRepository
      ref:
        branch: main
    subPath: hungryman-search-proc
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-notify
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-notify
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/has-tests: "true"
spec:
  build:
    env:
    - name: BP_MAVEN_BUILD_ARGUMENTS
      value: -P native -Dmaven.test.skip=true --no-transfer-progress package
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
  source:
    git:
      url: #@ data.values.gitRepository
      ref:
        branch: main
    subPath: hungryman-notify
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-availability
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-availability
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/has-tests: "true"
spec:
  build:
    env:
    - name: BP_MAVEN_BUILD_ARGUMENTS
      value: -P native -Dmaven.test.skip=true --no-transfer-progress package
  env:
  - name: spring_profiles_active
    value: postgres
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
      autoscaling.knative.dev/minScale: "1"
  serviceClaims:
  - name: db
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ResourceClaim
      name: postgres-where-for-dinner
  source:
    git:
      url: #@ data.values.gitRepository
      ref:
        branch: main
    subPath: hungryman-availability
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-ui
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-ui
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/has-tests: "true"
spec:
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
      autoscaling.knative.dev/minScale: "1"
  source:
    git:
      url: #@ data.values.gitRepository
      ref:
        branch: main
    subPath: hungryman-ui
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-crawler
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/part-of: where-for-dinner-crawler
    apps.tanzu.vmware.com/has-tests: "true"
spec:
  params:
  - name: ports
    value:
    - port: 80
      containerPort: 8080
      name: http
  source:
    git:
      url: #@ data.values.gitRepository
      ref:
        branch: main
    subPath: hungryman-crawler
