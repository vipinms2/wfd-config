#@ load("@ytt:data", "data")
---
apiVersion: eventing.knative.dev/v1
kind: Broker
metadata:
  name: where-for-dinner
  namespace: #@ data.values.workloadNamespace
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  labels:
    eventing.knative.dev/broker: where-for-dinner
  name: hungrman-search-proc
  namespace: #@ data.values.workloadNamespace
spec:
  broker: where-for-dinner
  filter:
    attributes:
      source: #@ "/apis/v1/namespaces/" + data.values.workloadNamespace + "/rabbitmqsources/where-for-dinner-search-criteria-rabbit-source#where-for-dinner-search-criteria"
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: where-for-dinner-search-proc
    uri: /processSearch
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  labels:
    eventing.knative.dev/broker: where-for-dinner
  name: hungrman-notify
  namespace: #@ data.values.workloadNamespace
spec:
  broker: where-for-dinner
  filter:
    attributes:
      source: http://spring.io/
      type: com.java.example.tanzu.wherefordinner.model.Availability
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: where-for-dinner-notify
    uri: /notifyAvailability
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  labels:
    eventing.knative.dev/broker: where-for-dinner
  name: hungrman-availability
  namespace: #@ data.values.workloadNamespace
spec:
  broker: where-for-dinner
  filter:
    attributes:
      source: http://spring.io/
      type: com.java.example.tanzu.wherefordinner.model.Availability
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: where-for-dinner-availability
    uri: /processAvailability
---
apiVersion: rabbitmq.com/v1beta1
kind: Exchange
metadata:
  labels:
    eventing.knative.dev/SourceName: where-for-dinner-search-criteria-rabbit-source
  name: where-for-dinner-search-criteria-exchnage
  namespace: #@ data.values.workloadNamespace
spec:
  durable: true
  name: where-for-dinner-search-criteria
  rabbitmqClusterReference:
    name: rmq-where-for-dinner
    namespace: #@ data.values.workloadNamespace
  type: topic
  vhost: /
---
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  labels:
    eventing.knative.dev/SourceName: where-for-dinner-search-criteria-rabbit-source
  name: where-for-dinner-search-criteria-queue
  namespace: #@ data.values.workloadNamespace
spec:
  durable: true
  autoDelete: false
  name: where-for-dinner-search-criteria
  rabbitmqClusterReference:
    name: rmq-where-for-dinner
    namespace: #@ data.values.workloadNamespace
  type: quorum
  vhost: /
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  labels:
    eventing.knative.dev/SourceName: where-for-dinner-search-criteria-rabbit-source
  name: where-for-dinner-search-criteria-binding
  namespace: #@ data.values.workloadNamespace
spec:
  source: where-for-dinner-search-criteria
  destination: where-for-dinner-search-criteria
  destinationType: queue
  routingKey: '#'
  rabbitmqClusterReference:
    name: rmq-where-for-dinner
    namespace: #@ data.values.workloadNamespace
  vhost: /
---
apiVersion: sources.knative.dev/v1alpha1
kind: RabbitmqSource
metadata:
  name: where-for-dinner-search-criteria-rabbit-source
  namespace: #@ data.values.workloadNamespace
spec:
  rabbitmqClusterReference:
    name: rmq-where-for-dinner
    namespace: #@ data.values.workloadNamespace
  rabbitmqResourcesConfig:
    predeclared: true
    parallelism: 5
    queueName: where-for-dinner-search-criteria
  sink:
    uri: #@ "http://broker-ingress.knative-eventing.svc.cluster.local/" + data.values.workloadNamespace + "/where-for-dinner"
